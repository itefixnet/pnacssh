Name=LINBASIC
Description=Linux basic checks
Version=1.0

<commands>
Disk usage = ./bin/check_linux_stats -D -w 10 -c 5 -p /,/home,/var -u %
Load average = ./bin/check_linux_stats -L -w 10,8,5 -c 20,18,15
Memory usage = ./bin/check_linux_stats -M -w 100,25 -c 100,50
CPU usage = ./bin/check_linux_stats -C -w 99 -c 100 -s 5
Open files = ./bin/check_linux_stats -F -w 10000,250000 -c 15000,350000
IO usage = ./bin/check_linux_stats -I -w 2000,600 -c 3000,800 -p sda1,sda3,sda4 -s 5
Processes = ./bin/check_linux_stats -P -w 1000 -c 2000
Network usage = ./bin/check_linux_stats -N -w 1000000 -c 1500000 -p eth0 -s 5
Sockets = ./bin/check_linux_stats -S -w 500 -c 1000
Uptime = ./bin/check_linux_stats -U -w 5
</commands>

NagiosHostTemplate = <<EOFNHT
########
## host __HOSTNAME__ with passive checks, auto created by pnacssh
define host{
    use						$user-servers
    host_name				__HOSTNAME__
    alias					__HOSTNAME__
	active_checks_enabled 	0
	passive_checks_enabled 	1
	max_check_attempts		1
	check_command			check_dummy!2!\"Host is stale\"      
	check_freshness			1      
	freshness_threshold		3600
}

EOFNHT

NagiosServiceTemplate = <<EOFNST
######
## service __HOSTNAME__ - __COMMAND__ with passive checks, auto created by pnacssh
define service {
	use 					generic-service,srv-pnp
    host_name				__HOSTNAME__
    service_description		__HOSTNAME__ __COMMAND__
	active_checks_enabled	0
	passive_checks_enabled	1
	check_command			check_dummy!2!\"service is stale\"
	check_freshness			1      
	freshness_threshold 	3600
}		

EOFNST

PnacsshCollectorScript = <<EOFCS
#!/usr/bin/perl 
use strict;
use warnings;
use File::Slurp;
our %services = (
__SERVICES__
);
our $hostname = __HOSTNAME__;
our $template = __TEMPLATE__;
our $result_file = "./$hostname-$template.result";
my $results = "PROCESS_HOST_CHECK_RESULT;$hostname;0;Host appears to be UP\n";
# Service checks
foreach my $service (keys %services) {
    my $command = $services{$service};
	my $lres = `$command`;
	my $lcode = $? >> 8;	
	$results .= "PROCESS_SERVICE_CHECK_RESULT;$hostname;$hostname $service;$lcode;$lres";
}
write_file ($result_file, $results);
system("sftp -q -b ./pnacssh.sftp -P __PORT__ -o UserKnownHostsFile=./__KNOWNHOSTFILE__ -i ./__PRIVATEKEY__ __USER__\@__DATACOLLECTOR__");
EOFCS
